{"version":3,"file":"component---src-pages-examples-notebooks-js-05dbf8af17bdd8078a70.js","mappings":"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","sources":["webpack://docs/./src/components/common/sidebar/SidebarLink.js","webpack://docs/./src/components/common/sidebar/SidebarList.js","webpack://docs/./src/components/common/sidebar/getSidebarFile.js","webpack://docs/./src/components/common/sidebar/SidebarNav.js","webpack://docs/./src/pages/examples/notebooks.js","webpack://docs//website/content/biodynamo/doc/sidebars|sync|/^\\.\\/.*\\.yaml$/","webpack://docs//website/content/team|sync|/^\\.\\/.*\\.yaml$/","webpack://docs//website/content/tutorial|sync|/^\\.\\/.*\\.yaml$/"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst SidebarLink = ({ link, title, linkClasses }) => {\n    if (link) {\n        if (link.match(/^\\s?http(s?)/gi)) {\n            // use anchor links for external links\n            return <a href={link} className={`link db pv6px pr2 lh-1-5 pl0 ${linkClasses}`} target=\"_blank\" rel=\"noopener noreferrer\">{title}</a>\n        } else {\n            return <Link to={link} className={`link db pv6px pr2 lh-1-5 pl0 ${linkClasses}`}>{title}</Link>\n        }\n    } else {\n        return (\n            <>{this.props.title}</>\n        )\n    }\n}\n\nSidebarLink.propTypes = {\n    link: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    linkClasses: PropTypes.string.isRequired,\n}\n\nexport default SidebarLink\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport SidebarLink from './SidebarLink'\n\nconst SidebarList = ({ items, location }) => {\n    const linkClasses = `midgrey fw4 hover-blue-l2`\n    const activeLinkClasses = `sidebarlink-active blue fw6`\n\n    return (\n        <ul className=\"relative sidebar-list ma0 pa0 list mb5 pl6 mt1\">\n            {items.map((item, j) => (\n                <li key={j}>\n                    <SidebarLink\n                        link={item.link}\n                        title={item.title}\n                        linkClasses={(item.link === location.pathname ? activeLinkClasses : linkClasses)}\n                    />\n                </li>\n            ))}\n        </ul>\n    )\n}\n\nSidebarList.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            link: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SidebarList\n","import PropTypes from 'prop-types'\n\nconst getSidebarFile = (sidebar) => {\n    try {\n    \tif (sidebar == \"userguide\" || sidebar == \"devguide\")\n    \t\tvar [sidebarfile] = require(`../../../../content/biodynamo/doc/sidebars/${sidebar}.yaml`)\n        // declare as var here, so it's accessible outside of the try scope\n        else if (sidebar == \"team\")\n            var [sidebarfile] = require(`../../../../content/team/${sidebar}.yaml`)\n        else if (sidebar == \"tutorial\")\n            var [sidebarfile] = require(`../../../../content/tutorial/${sidebar}.yaml`)      \n    } catch (e) {\n        // TODO: make clear error handling here\n        throw e\n    }\n\n    return sidebarfile\n}\n\ngetSidebarFile.propTypes = {\n    sidebar: PropTypes.string.isRequired,\n}\n\nexport default getSidebarFile\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport SidebarLink from './SidebarLink'\nimport SidebarList from './SidebarList'\nimport getSidebarFile from './getSidebarFile'\n\nconst SidebarNav = ({ sidebar, location }) => {\n    const sidebarfile = getSidebarFile(sidebar)\n\n    if (!sidebar || !sidebarfile || !sidebarfile.groups) {\n        return null\n    }\n\n    return (\n        <nav className=\"mt5 mb5 mt10-ns mb0-ns relative\" data-cy=\"sidebar\">\n            {sidebarfile.groups.map((group, i) => (\n                <div key={i} className=\"mt1\">\n                    {group.items.some(item => (item.link === location.pathname)) ?\n                        // Render a sidebar list with children, if any of the nested elements\n                        // matches our current location, so the group needs to\n                        <>\n                            <h4 className=\"f5 fw5 link pa0 ma0\">\n                                {group.items[0].link ?\n                                    <SidebarLink link={group.items[0].link} title={group.group} linkClasses=\"midgrey link\" />\n                                    : group.group\n                                }\n                            </h4>\n                            <SidebarList\n                                key={i}\n                                items={group.items}\n                                location={location}\n                            />\n                        </>\n                        : <h4 className=\"f5 fw5 link pa0 ma0\">{(group.items[0].link ? <SidebarLink link={group.items[0].link} title={group.group} linkClasses=\"midgrey hover-blue-l2 link\" /> : group.group)}</h4>}\n                </div>\n            ))}\n        </nav>\n    )\n}\n\nSidebarNav.defaultProps = {\n    location: { pathname: `/` },\n}\n\nSidebarNav.propTypes = {\n    sidebar: PropTypes.string.isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default SidebarNav\n","\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport { Layout } from '../../components/common/layout'\nimport { Spirit } from '../../styles/spirit-styles'\nimport { SidebarNav } from '../../components/common/sidebar'\nimport { MetaData, getMetaImageUrls } from '../../components/common/meta'\n\nimport { TOC } from '../../components/common'\n\nconst Tutorials = ({ data, location }) => {\n    const title = `Notebooks`\n    const description = `This is the tutorials page.`\n    const imageUrl = getMetaImageUrls()\n    const sideBarLayout = {}\n    location.pathname = location.pathname.replace(/\\/$/, \"\")\n\n    const sidebar = 'tutorial'\n    const toc = true\n\n    if (sidebar && toc) {\n        // Layout #1: navigation left and right: sidebar and TOC\n        console.log(\"sidebar && toc\")\n        sideBarLayout.leftSidebar = <SidebarNav location={location} sidebar={sidebar} />\n        sideBarLayout.rightSidebar = <div className=\"nr3 sticky top-25\"><TOC className=\"pr4\" listClasses=\"mt2\" /></div>\n        sideBarLayout.justification = `justify-between`\n    } else if (sidebar || toc) {\n        // Layout #2: navigation left only, either TOC or sidebar\n\n        sideBarLayout.leftSidebar = sidebar ?\n            <SidebarNav location={location} sidebar={sidebar} /> :\n            <div className=\"nr3 sticky top-25\"><TOC listClasses=\"lefty\" className=\"mt5 mb5 mt10-ns mb0-ns\" showHeading={true} /></div>\n        sideBarLayout.justification = `justify-start`\n    } else {\n        // Layout #3: no sidebar navigation\n        sideBarLayout.justification = `justify-center`\n    }\n    console.log(sideBarLayout);\n\n    return (\n        <>\n            <MetaData\n                data={data}\n                location={location}\n                title={title}\n                type=\"website\"\n                description={description}\n                image={imageUrl}\n            />\n            <Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n\n                <div className=\"bg-concepts\">\n                    <div className={`${Spirit.page.xl} pt12 pb4 pt-vw1-ns pb-vw1-ns white pl10 pl0-ns`}>\n                        <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}> <Link to=\"/tutorials/\" className=\"link dim white\">{title}</Link></h1>\n                        <p className={Spirit.sectionSubHeading}>\n                            This is a list of <strong><Link to=\"/docs/userguide/notebook\" className=\"link dim white\">BioDynaMo notebooks:</Link></strong>\n                        </p>\n                    </div>\n                </div>\n\n                {/* <div className={`${Spirit.page.xl} mt-vw3`}> */}\n                <div className={`${Spirit.page.xl} flex flex-column flex-row-ns ${sideBarLayout.justification} relative`}>\n                    {sideBarLayout.leftSidebar ?\n                        <div className={`${(false ? `mobile-nav-open` : ``)} w-100 w-sidebar-ns pr10 pl5 pl0-ns flex-shrink-0-l relative left-sidebar`}>\n                            {sideBarLayout.leftSidebar}\n                        </div>\n                        : null\n                    }\n                    <div>\n                        <div className={`w-100 mw-content bg-white shadow-2 br4`}>\n                            <article className=\"flex-auto pa5 pa8-m pa15-l pt10-ns pb10-ns pt10-l pb10-l relative\">\n                                <section className=\"post-content external-scripts\">\n                                    {\n                                        data.allJupyterNotebook.nodes.map(node => {\n                                            console.log(node)\n                                            let staticPath = node.fileRelativePath.split(\"biodynamo/\")[1]\n                                            let name = node.fileRelativePath.split(\"/\")[2];\n                                            let json = node.json;\n                                            let title = name.charAt(0).toUpperCase() + name.slice(1).replace(\"-\", \" \")\n                                            let html = \"/\" + staticPath.replace(\".ipynb\", \".html\")\n                                            let gitpod_link = \"https://gitpod.io/#BDM_TRY_NOTEBOOK=\"+name+\"/https://github.com/LukasBreitwieser/gitpod-vnc\"\n                                            const cleaned_first_cell = json['cells'][0]['source'].reduce((acc, text) => acc + text.replace(\"#\", \"\")).replace(\"#\", \"\").split(\"**\");\n                                            let notebookTitle = cleaned_first_cell[0].trim();\n                                            let Author = cleaned_first_cell[1].trim();\n                                            let text = cleaned_first_cell[2];\n                                            let githubNotebookLink= \"https://github.com/BioDynaMo/biodynamo/blob/master/notebook/\" + name;\n\n                                            return (\n                                                <>\n                                                    <h2 id={notebookTitle} className={`darkgrey`} >{notebookTitle}</h2>\n                                                    <div style={{ paddingLeft: \"2rem\" }}>\n                                                        <p>{Author}, Filename: <a target=\"_blank\" href={githubNotebookLink}> {title} </a> </p>\n                                                        <p style={{marginTop: 0}} dangerouslySetInnerHTML={{ __html: text }}></p>\n                                                        <div style={{ display: \"flex\", justifyContent: \"center\", }}>\n                                                            <br />\n                                                            <a style={{ boxShadow: 'none', }} href={html} target=\"_blank\" > <button className={`${Spirit.greybutton}`}><b>View Now</b></button></a>\n                                                            <div style={{\"margin-right\": \"5px\", \"margin-left\": \"5px\"}} />\n                                                            <a style={{ boxShadow: 'none', }} href={gitpod_link} target=\"_blank\" > <button className={`${Spirit.greenbutton}`}><b>Try Now</b></button></a>\n                                                        </div>\n\n                                                    </div>\n                                                    <hr style={{ \"margin-top\": \"3.2rem\", }} />\n\n                                                </>\n                                            )\n                                        })\n                                    }\n                                </section>\n                            </article>\n                        </div>\n                    </div>\n                    {sideBarLayout.rightSidebar ?\n                        <div className=\"order-3 w-sidebar flex-shrink-0 dn db-l pt10 pl7\">\n                            {/* {sideBarLayout.rightSidebar} */}\n                            <div className=\"f4 measure--0-2 middarkgrey ma0 mb2 pa0 fw4 nudge-bottom--2\" style={{ position: 'sticky', top: '6vh' }}><h3 class=\"f4 measure--0-2 middarkgrey ma0 mb2 pa0 fw4 nudge-bottom--2\"> On this page</h3>\n                                <div className=\"toc-list-container mt2 \">\n                                    <ol className=\"toc-list \">\n                                        {data.allJupyterNotebook.nodes.map(node => {\n                                            let name = node.fileRelativePath.split(\"/\")[1];\n                                            let json = node.json;\n                                            let title = name.charAt(0).toUpperCase() + name.slice(1).replace(\"-\", \" \");\n                                            const cleaned_first_cell = json['cells'][0]['source'].reduce((acc, text) => acc + text.replace(\"#\", \"\")).replace(\"#\", \"\").split(\"**\");\n                                            let notebookTitle = cleaned_first_cell[0].trim();\n                                            let Author = cleaned_first_cell[1];\n                                            let text = cleaned_first_cell[2];\n                                            return (\n                                                <li className=\"toc-list-item\">\n                                                    <a href={\"#\" + notebookTitle} className=\"toc-link node-name--H2 \">\n                                                        {notebookTitle}\n                                                    </a>\n                                                </li>)\n                                        })}\n                                    </ol></div>\n                            </div>\n                        </div>\n                        : null\n                    }\n                </div>\n\n            </Layout>\n        </>\n    )\n}\n\nTutorials.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default Tutorials\n\nexport const tutorialsQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n      \n        \n        allJupyterNotebook(filter: {fileRelativePath: {regex: \"/biodynamo/notebooks/\"}}\n        sort: {order: ASC, fields: fileRelativePath}) {\n            nodes {\n                fileRelativePath\n                json {\n                    nbformat_minor\n                    cells {\n                    cell_type\n                    id\n                    source\n                    }\n                    nbformat\n                  }\n                  metadata {\n                    ipub {\n                      titlepage {\n                        author\n                        email\n                        tagline\n                        subtitle\n                        title\n                      }\n                    }\n                    kernelspec {\n                      display_name\n                      language\n                      name\n                    }\n                    language_info {\n                      file_extension\n                      mimetype\n                      name\n                    }\n                  }\n            }\n      \n      \n    \n  }\n       \n    }\n`\n","var map = {\n\t\"./devguide.yaml\": 95545,\n\t\"./userguide.yaml\": 27871\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 75331;","var map = {\n\t\"./team.yaml\": 80753\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23293;","var map = {\n\t\"./tutorial.yaml\": 38891\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 66631;"],"names":["link","title","linkClasses","match","href","className","target","rel","Link","to","props","items","location","map","item","j","key","pathname","getSidebarFile","sidebar","sidebarfile","require","e","propTypes","PropTypes","SidebarNav","groups","group","i","some","defaultProps","data","imageUrl","getMetaImageUrls","sideBarLayout","replace","console","log","leftSidebar","rightSidebar","listClasses","justification","type","description","image","mainClass","bodyClass","Spirit","allJupyterNotebook","nodes","node","staticPath","fileRelativePath","split","name","json","charAt","toUpperCase","slice","html","gitpod_link","cleaned_first_cell","reduce","acc","text","notebookTitle","trim","Author","githubNotebookLink","id","style","paddingLeft","marginTop","dangerouslySetInnerHTML","__html","display","justifyContent","boxShadow","position","top","class","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}
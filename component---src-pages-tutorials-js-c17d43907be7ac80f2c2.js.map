{"version":3,"file":"component---src-pages-tutorials-js-c17d43907be7ac80f2c2.js","mappings":"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","sources":["webpack://docs/./src/components/tutorials/TutorialBox.js","webpack://docs/./src/components/tutorials/JupyterTutorialBox.js","webpack://docs/./src/pages/tutorials.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\nconst TutorialBox = ({ src, to, href, headingClass, title, children, link, html }) => (\n    <Box\n        to={to}\n        href={href}\n        className=\" col-12 col-6-ns col-4-l pa8 tdn middarkgrey gallery-box-min-height gallery-box-max-height\"\n        radius=\"4\"\n        style={{ width: \"fit-content\", display: \"inline-grid\", justifyContent: \"center\", alignItems: \"center\" }}\n    >\n        <div style={{minHeight: '15rem'}}>\n            <h2  id={title} style={{margin:\"0 0 0 0\", textTransform: \"capitalize\"}} className={`${Spirit.h2} darkgrey ${headingClass}`}>{title}</h2>\n        </div>\n        <div style={{height: '20rem', width:'20rem', textAlign:'center', display:'block'}}>\n            <img style={{maxHeight: '200px', maxWidth:'200px', alignContent:\"center\"}} src={src} className=\"tutorial-img mt2\"/>    \n        </div>\n        \n        <div className={`${Spirit.p} mt2 midgrey`}>{children}</div>\n        <div style={{margin: \"0 0 0 0\"}} align='center'>\n            {/* <a href={html} target=\"_blank\" > <button className={`${Spirit.greybutton}`}><b>View now</b></button></a> */}\n            <a  href={link} target=\"_blank\" > <button className={`${Spirit.greenbutton}`}><b>Try Now</b></button></a>\n      </div>\n    </Box>\n)\n\nTutorialBox.propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string.isRequired,\n    link: PropTypes.string,\n    to: PropTypes.string,\n    href: PropTypes.string,\n}\n\nexport default TutorialBox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box } from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\nimport { readFileSync } from 'fs'\n\n\n\nconst JupyterTutorialBox = ({ src, to, href, headingClass, title, children, binder, html, json }) => {\n    console.log(src, to, href, headingClass, title, children, binder, html, json);\n\n    // var data=fs.readFileSync(src, 'utf8');\n    // console.log(data, 'the json obj');\n    console.log(\"html, json ::\",html, json);\n    if (json == undefined){\n        return null;\n    }    \n\n    return (\n    <Box\n        to={to}\n        href={href}\n        className=\"col-12 col-6-ns col-4-l pa8 tdn middarkgrey gallery-box-min-height gallery-box-max-height\"\n        radius=\"4\"\n    >\n        <h2 className={`post-content ${Spirit.h2} darkgrey ${headingClass}`} style={{fontWeight: \"bold\"}}>{notebookTitle}</h2>\n        <h2 className={`post-content ${Spirit.h2} darkgrey ${headingClass}`}>{Author}</h2>\n        <h4 className={`post-content ${Spirit.h2} darkgrey ${headingClass}`}>filename: {title}</h4>\n       <p dangerouslySetInnerHTML={{ __html: text}}></p>\n        {/* <div className={`${Spirit.p} mt2 midgrey`}>{children}</div> */}\n        <div style={{display:\"flex\", justifyContent:\"center\"}}>\n            <br/>\n            <a href={html} target=\"_blank\" > <button className={`${Spirit.greybutton}`}><b>View now</b></button></a>\n            <br/>\n            <a href={binder} target=\"_blank\" > <button className={`${Spirit.greenbutton}`}><b>Run now</b></button></a>\n      </div>\n    </Box>\n)}\n\nJupyterTutorialBox.propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string.isRequired,\n    binder: PropTypes.string,\n    to: PropTypes.string,\n    href: PropTypes.string,\n}\n\nexport default JupyterTutorialBox\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport { Layout } from '../components/common/layout'\nimport { Spirit } from '../styles/spirit-styles'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\nimport { TutorialBox, JupyterTutorialBox } from '../components/tutorials'\n\nconst Tutorials = ({ data, location }) => {\n    const title = `Tutorials`\n    const description = `This is the tutorials page.`\n    const imageUrl = getMetaImageUrls()\n\n    return (\n\t\t<>\n\t\t\t<MetaData\n\t\t\t    data={data}\n\t\t\t    location={location}\n\t\t\t    title={title}\n\t\t\t    type=\"website\"\n\t\t\t    description={description}\n\t\t\t    image={imageUrl}\n\t\t\t/>\n\t\t\t<Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n\n\t\t\t    <div className=\"bg-concepts\">\n\t\t\t        <div className={`${Spirit.page.xl} pt12 pb4 pt-vw1-ns pb-vw1-ns white pl10 pl0-ns`}>\n                    <h1 className={`${Spirit.sectionHeading} gh-integration-header-shadow`}> {title} </h1>              \n                        <p className={Spirit.sectionSubHeading}>\n                    This is a gallery of example <strong><Link to=\"/docs/userguide/notebook\" className=\"link dim white\">BioDynaMo notebooks:</Link></strong> click on the images to inspect the underlying document.\n                        </p>\n\t\t\t        </div>\n\t\t\t    </div>\n\n\t\t\t    <div className={`${Spirit.page.xl} mt-vw3`}>\n\n\t\t\t        <section className=\"grid-12 gutter-row-20 gutter-20-ns gutter-36-l\">\n\n\t\t\t            {\n\t\t\t                data.notebooks.edges.map(edge => (\n                                <TutorialBox \n                                html={\"/notebooks/\"+edge.node.relativePath}\n                                title={edge.node.name.charAt(0).toUpperCase()+edge.node.name.slice(1).replace(\"_\", \" \")} \n                                src={\"/images/notebooks/\"+edge.node.name+\".png\"}\n                                binder={\"https://mybinder.org/v2/gh/BioDynaMo/binder-demo/dockerfile?filepath=%2F\"+edge.node.name+\"%2F\"+edge.node.name+\".ipynb\"}>\n\t\t\t                    </TutorialBox>\n\t\t\t                ))\n\t\t\t            }\n                        {\n\t\t\t                data.jupyter_notebooks.edges.map(edge => (\n                                <JupyterTutorialBox \n                                html={\"/jupyter/\"+edge.node.relativePath}\n                                title={edge.node.name.charAt(0).toUpperCase()+edge.node.name.slice(1).replace(\"-\", \" \")} \n                                src={edge.node.absolutePath}\n                                binder={\"https://mybinder.org/v2/gh/BioDynaMo/binder-demo/dockerfile?filepath=%2F\"+edge.node.name+\"%2F\"+edge.node.name+\".ipynb\"}>\n\t\t\t                    </JupyterTutorialBox>\n\t\t\t                ))\n\t\t\t            }\n\t\t\t        </section>\n\n\t\t\t    </div>\n\n\t\t\t</Layout>\n\t\t</>\n    )\n}\n\nTutorials.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default Tutorials\n\nexport const tutorialsQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n        notebooks: allFile(filter: {sourceInstanceName: {eq: \"notebooks\"}, extension: {eq:\"html\"}}) {\n            edges {\n                node {\n                    name\n                    relativePath\n                    absolutePath\n                }\n            }\n\n        }\n        jupyter_notebooks: allFile(\n            filter: {sourceInstanceName: {eq: \"jupyter\"}, extension: {eq:\"ipynb\"}}\n          ) {\n            edges {\n              node {\n                name\n                relativePath\n                absolutePath\n              }\n            }\n          }\n    }\n`\n"],"names":["src","to","href","headingClass","title","children","link","html","className","radius","style","width","display","justifyContent","alignItems","minHeight","id","margin","textTransform","Spirit","height","textAlign","maxHeight","maxWidth","alignContent","align","target","binder","json","console","log","undefined","fontWeight","notebookTitle","Author","dangerouslySetInnerHTML","__html","text","data","location","imageUrl","getMetaImageUrls","type","description","image","mainClass","bodyClass","Link","notebooks","edges","map","edge","node","relativePath","name","charAt","toUpperCase","slice","replace","jupyter_notebooks","absolutePath"],"sourceRoot":""}
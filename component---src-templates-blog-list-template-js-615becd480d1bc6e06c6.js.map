{"version":3,"sources":["webpack:///./src/templates/blog-list-template.js"],"names":["NewsIndexPage","render","posts","this","props","data","allMarkdownRemark","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","mainClass","bodyClass","className","Spirit","page","l","h4","to","map","node","title","frontmatter","fields","slug","key","id","radius","h5","date","small","excerpt","rel","Array","from","length","_","i","React","Component","blogListQuery"],"mappings":"uTAMqBA,E,oGAEnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MADzC,EAE2BJ,KAAKC,MAAMI,YAArCC,EAFD,EAECA,YAAaC,EAFd,EAEcA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,UAAY,UAAYA,EAAc,IAAIK,WAC7EC,GAAY,UAAYN,EAAc,IAAIK,WAEhD,OACE,kBAAC,IAAD,CAAQE,UAAU,yBAAyBC,UAAU,YAEnD,yBAAKC,UAAU,eACX,yBAAKA,UAAcC,IAAOC,KAAKC,EAAjB,mDACV,wBAAIH,UAAcC,IAAOG,GAAZ,iCACT,kBAAC,OAAD,CAAMC,GAAG,SAASL,UAAU,kBAA5B,YAKZ,yBAAKA,UAAcC,IAAOC,KAAKC,EAAjB,WACXnB,EAAMsB,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,0BAAMC,IAAML,EAAKM,IACf,kBAAC,IAAD,CAAKC,OAAO,IAAId,UAAU,YACxB,kBAAC,OAAD,CAAMK,GAAIE,EAAKG,OAAOC,KAAMX,UAAU,8CAClC,wBAAIA,UAAcC,IAAOG,GAAZ,aAA4BI,EAAzC,MACA,wBAAIR,UAAcC,IAAOc,GAAZ,KAAoBR,EAAKE,YAAYO,KAAlD,KACA,uBAAGhB,UAAcC,IAAOgB,MAAZ,QAA0BV,EAAKW,UAE/C,8BAEF,iCAKN,yBAAKlB,UAAU,QACf,6BAASA,UAAU,aAEjB,8BACIP,GACA,kBAAC,IAAD,CAAKqB,OAAO,IAAId,UAAU,sBACxB,kBAAC,OAAD,CAAMA,UAAU,kCAAkCK,GAAIV,EAAUwB,IAAI,QAClE,wBAAInB,UAAcC,IAAOc,GAAZ,aAAb,sBAMR,kBAAC,IAAD,CAAKD,OAAO,IAAId,UAAU,wBACvBoB,MAAMC,KAAK,CAAEC,OAAQ9B,IAAY,SAAC+B,EAAGC,GAAJ,OAChC,kBAAC,OAAD,CAAMxB,UAAU,kCAAkCY,IAAG,qBAAsBY,EAAI,GAAKnB,GAAE,UAAiB,IAANmB,EAAU,GAAKA,EAAI,IAClH,wBAAIxB,UAAcC,IAAOc,GAAZ,aAA6BS,EAAI,EAAKA,EAAE,GAAIhC,EAAW,GAAK,UAK/E,8BACIE,GACA,kBAAC,IAAD,CAAKoB,OAAO,IAAId,UAAU,uBACxB,kBAAC,OAAD,CAAMA,UAAU,kCAAkCK,GAAIR,EAAUsB,IAAI,QAClE,wBAAInB,UAAcC,IAAOc,GAAZ,aAAb,sB,GAhEuBU,IAAMC,WA+EpCC,EAAgB","file":"component---src-templates-blog-list-template-js-615becd480d1bc6e06c6.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { Layout } from \"../components/common/layout\"\nimport { Spirit } from '../styles/spirit-styles'\nimport { Box } from \"../components/common\"\n\nexport default class NewsIndexPage extends React.Component {\n\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? \"/blog/\" : (\"/blog/\" + (currentPage - 1)).toString()\n    const nextPage = (\"/blog/\" + (currentPage + 1)).toString()\n\n    return (\n      <Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n\n        <div className=\"bg-concepts\">\n            <div className={`${Spirit.page.l} pt12 pb4 pt-vw1-ns pb-vw1-ns white pl10 pl0-ns`}>\n                <h1 className={`${Spirit.h4} gh-integration-header-shadow`}>\n                    <Link to=\"/blog/\" className=\"link dim white\">Blogs</Link>\n                </h1>\n            </div>\n        </div>\n\n        <div className={`${Spirit.page.l} mt-vw3`}>\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <span key ={node.id}>\n                <Box radius=\"4\" className=\"news-box\">\n                  <Link to={node.fields.slug} className=\"midgrey home-faq-question link dib pt1 pb5\">\n                      <h3 className={`${Spirit.h4} blue dib`}>{title} &raquo;</h3>\n                      <h5 className={`${Spirit.h5} `}>{node.frontmatter.date} </h5>\n                      <p className={`${Spirit.small} mt0`}>{node.excerpt}</p>\n                  </Link>\n                  <br/>\n                </Box>\n                <br/>\n              </span>\n              )\n          })}\n\n          <div className=\"mt5\"/>\n          <section className=\"news-grid\">\n\n            <div>\n              {!isFirst && (\n                <Box radius=\"4\" className=\"news-grid-box-left\">\n                  <Link className=\"blue home-faq-question link dib\" to={prevPage} rel=\"prev\">\n                    <h4 className={`${Spirit.h5} blue dib`}>&laquo; Previous Page</h4>\n                  </Link>\n                </Box>\n                )}\n            </div>\n\n            <Box radius=\"4\" className=\"news-grid-box-center\">\n              {Array.from({ length: numPages }, (_, i) => (\n                <Link className=\"blue home-faq-question link dib\" key={`pagination-number${i + 1}`} to={`/blog/${i === 0 ? \"\" : i + 1}`}>\n                  <h4 className={`${Spirit.h5} blue dib`}>{(i + 1)}{(i+1)==numPages ? \"\" : \"-\"}</h4>\n                </Link>\n              ))}\n            </Box>\n\n            <div>\n              {!isLast && (\n                <Box radius=\"4\" className=\"news-grid-box-right\">\n                  <Link className=\"blue home-faq-question link dib\" to={nextPage} rel=\"next\">\n                    <h4 className={`${Spirit.h5} blue dib`}>Next Page &raquo;</h4>\n                  </Link>\n                </Box>\n              )}\n            </div>\n\n          </section>\n\n        </div>\n\n      </Layout>\n    )\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      filter: {fields: {slug: {regex: \"/blog/\"}}}\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 100)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD-MM-YYYY\")\n            path\n            meta_description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
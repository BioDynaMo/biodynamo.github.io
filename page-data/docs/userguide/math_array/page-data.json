{"componentChunkName":"component---src-templates-markdown-post-js","path":"/docs/userguide/math_array/","webpackCompilationHash":"275543abe8bbf7b52611","result":{"data":{"site":{"siteMetadata":{"siteUrl":"http://local:8000","title":"BioDynaMO Website","description":"Everything you need to know about biology simulations."}},"markdownRemark":{"frontmatter":{"title":"Math Array","date":"2019-01-01","date_pretty":"01 January, 2019","path":"/docs/userguide/math_array/","meta_title":"BioDynaMo User Guide","meta_description":"This is the math array page.","image":"","next":{"url":"/docs/userguide/math_array/","title":"Math Array","description":"This is the math array page."},"sidebar":"userguide","toc":true},"html":"<h2 id=\"description\"><a href=\"#description\" aria-label=\"description permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Description</h2>\n<p><code class=\"language-text\">MathArray&lt;T,N&gt;</code> is an array-like structure which provides a similar interface to the\nstandard <code class=\"language-text\">std::array&lt;T,N&gt;</code> class, but it overloads many standard mathematical\noperations (e.g. <code class=\"language-text\">+</code>, <code class=\"language-text\">-</code>, <code class=\"language-text\">+=</code>, etc.). Moreover, it implements several custom\noperations (e.g. <code class=\"language-text\">Norm()</code>, <code class=\"language-text\">Normalize()</code>, etc.).</p>\n<h2 id=\"mathematical-operations\"><a href=\"#mathematical-operations\" aria-label=\"mathematical operations permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mathematical Operations</h2>\n<p>It is possible to perform several mathematical operations with <code class=\"language-text\">MathArray</code> instances. For instance:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">MathArray<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token operator\">></span> a <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nMathArray<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token operator\">></span> b <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// sum == {2,3,4,5};</span>\n<span class=\"token keyword\">auto</span> sum <span class=\"token operator\">=</span> a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// sub == {0,1,2,3};</span>\n<span class=\"token keyword\">auto</span> sub <span class=\"token operator\">=</span> a<span class=\"token operator\">-</span>b<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Performs the dot product between the two MathArray</span>\n<span class=\"token comment\">// elements and it returns a single value. dot == 10</span>\n<span class=\"token keyword\">auto</span> dot <span class=\"token operator\">=</span> a<span class=\"token operator\">*</span>b<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// div = {1,2,3,4};</span>\n<span class=\"token keyword\">auto</span> div <span class=\"token operator\">=</span> a<span class=\"token operator\">/</span>b<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Increment and decrement operations are also defined (plus other in-place operations):</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">MathArray<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token operator\">></span> a <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nMathArray<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token operator\">></span> b <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\na<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\na<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n\na <span class=\"token operator\">+=</span> b<span class=\"token punctuation\">;</span>\na <span class=\"token operator\">-=</span> b<span class=\"token punctuation\">;</span>\na <span class=\"token operator\">/=</span> b<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"complex-operations\"><a href=\"#complex-operations\" aria-label=\"complex operations permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Complex Operations</h2>\n<p><code class=\"language-text\">MathArray</code> objects offer also a series of custom operations which make them\neasier to use and to manipulate.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">MathArray<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token operator\">></span> a <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nMathArray<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token operator\">></span> b <span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Entry wise product between a and b. The result will be a new array</span>\n<span class=\"token comment\">// with as content {2, 4, 6, 8}.</span>\n<span class=\"token keyword\">auto</span> entry_prod <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">EntryWiseProduct</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// It returns the sum of the array's content, which is 10.</span>\n<span class=\"token keyword\">auto</span> array_sum <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">Sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// It computes and returns the array's norm.</span>\n<span class=\"token keyword\">auto</span> norm <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">Norm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Normalize the array in-place.</span>\na<span class=\"token punctuation\">.</span><span class=\"token function\">Normalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Two alias are also available, <code class=\"language-text\">Double3</code> and <code class=\"language-text\">Double4</code>, which correspond to the\nfollowing instantiations: <code class=\"language-text\">MathArray&lt;double, 3&gt;</code> and <code class=\"language-text\">MathArray&lt;double, 4&gt;</code>.</p>","fields":{"slug":"/docs/userguide/math_array/"},"timeToRead":1,"excerpt":"Description is an array-like structure which provides a similar interface to the\nstandard  class, but it overloads many standard…","fileAbsolutePath":"/website/content/biodynamo/doc/user_guide/math_array.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/userguide/math_array/"}}}
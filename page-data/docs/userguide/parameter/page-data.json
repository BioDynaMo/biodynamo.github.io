{"componentChunkName":"component---src-templates-markdown-post-js","path":"/docs/userguide/parameter/","webpackCompilationHash":"31c12f27ec0f8c7fa00f","result":{"data":{"site":{"siteMetadata":{"siteUrl":"http://local:8000","title":"BioDynaMO Website","description":"Everything you need to know about biology simulations."}},"markdownRemark":{"frontmatter":{"title":"Parameter","date":"2019-01-01","date_pretty":"01 January, 2019","path":"/docs/userguide/parameter/","meta_title":"BioDynaMo User Guide","meta_description":"This is the parameter page.","image":"","next":{"url":"/docs/userguide/parameter/","title":"Parameter","description":"This is the parameter page."},"sidebar":"userguide","toc":true},"html":"<p>Parameters are used to tailor BioDynaMo to your specific simulation.</p>\n<p>The majority of parameters are defined in the <a href=\"/bioapi/structbdm_1_1Param.html\">core engine</a>.\nEach module can define its own <a href=\"/bioapi/structbdm_1_1experimental_1_1neuroscience_1_1Param.html\"><code class=\"language-text\">Param</code> class</a> to add additional parameters.</p>\n<p>There are three ways to set the value of a parameter:</p>\n<ol>\n<li>TOML configuration file</li>\n<li>Command line argument</li>\n<li>Assignment in the source code.</li>\n</ol>\n<br/>\n<a class=\"sbox\" target=\"_blank\" rel=\"noopener\">\n    <div class=\"sbox-content\">\n      <h4><b>Note</b></h4>\n      <p>Higher index takes precedence.  E.g. If you define the <code>backup_file</code> in the TOML file and the\n    command line parameter, the command line version will be used.\n    </p>\n    </div>\n</a>\n<p>The documentation of each parameter contains a description of the\nparameter, its default value and how to set it in the TOML file (<a href=\"/bioapi/structbdm_1_1Param.html#a13d24f045335b7ac62a091f56c6fe166\">example</a>)</p>\n<p>The following code snippet shows how to access a parameter in your\nsimulation.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const auto* param = Simulation::GetActive()-&gt;GetParam();\nstd::cout &lt;&lt; param-&gt;simulation_time_step_ &lt;&lt; std::endl;\nstd::cout &lt;&lt; param-&gt;GetModuleParam&lt;neuroscience::Param&gt;()-&gt;neurite_max_length_ &lt;&lt; std::endl;</code></pre></div>\n<h3 id=\"configuration-file\"><a href=\"#configuration-file\" aria-label=\"configuration file permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration File</h3>\n<p>This is the recommended way to set runtime variables. Create a file <code class=\"language-text\">bdm.toml</code>\nin the working directory and add your configuration. You can find a sample below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[visualization]\nexport = true\nexport_interval = 1\n\n[[visualize_sim_object]]\nname = &quot;Cell&quot;\nadditional_data_members = [ &quot;density_&quot; ]</code></pre></div>\n<h3 id=\"command-line-options\"><a href=\"#command-line-options\" aria-label=\"command line options permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Command Line Options</h3>\n<p>Some parameter can be set as command line argument when you start the simulation.\nFor a complete list execute the binary with the <code class=\"language-text\">--help</code> switch. e.g. <code class=\"language-text\">./cell_division --help</code>.</p>\n<p>Sample output:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> -- BioDynaMo command line options\n\nUsage:\n  ./cell_division [OPTION...]\n\n Simulation options:\n  -n, --num-cells arg  The total number of cells (default: 10)\n\n Core options:\n  -h, --help          Print this help message.\n      --version       Print version number of BioDynaMo.\n      --opencl        Enable GPU acceleration through OpenCL.\n      --cuda          Enable GPU acceleration through CUDA.\n  -v, --verbose       Verbose mode. Causes BioDynaMo to print debugging\n                      messages. Multiple -v options increases the verbosity. The\n                      maximum is 3.\n  -r, --restore FILE  Restores the simulation from the checkpoint found in\n                      FILE and continues simulation from that point. (default: )\n  -b, --backup FILE   Periodically create full simulation backup to the\n                      specified file. NOTA BENE: File will be overriden if it\n                      exists. (default: )\n  -c, --config FILE   The TOML configuration that should be used. (default: )</code></pre></div>\n<p>You can append your own command line options as following (e.g. <code class=\"language-text\">num-cells</code> as\nshow in the sample above):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">auto opts = CommandLineOptions(argc, argv);\nopts.AddOption&lt;uint64_t&gt;(&quot;n, num-cells&quot;, &quot;The total number of cells&quot;, &quot;10&quot;);\n\n// You will need to pass this object to the main Simulation object as follows:\nSimulation simulation(opts);\n\n// To retrieve the values from the command line in your simulation code\nauto parser = opts.Parse();\nuint64_t num_cells = parser.Get&lt;uint64_t&gt;(&quot;num-cells&quot;);</code></pre></div>\n<p>The <code class=\"language-text\">AddOption</code> function can be broken down as follows: The template parameter\n(<code class=\"language-text\">uint64_t</code>) specifies what value type your option should be. The first fucntion\nparameter is for the flag abbreviation (in this case -n and --num-cells) The\nsecond parameter is the name of your command line option The third parameter is\nthe description (as shown in the help dialogue) The fourth parameter is the\ndefault value of the command line option (i.e. when you do not specify the\nflag).</p>\n<h3 id=\"assignment-in-the-source-code\"><a href=\"#assignment-in-the-source-code\" aria-label=\"assignment in the source code permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assignment in the Source Code</h3>\n<p>You can also set a runtime parameter in the source code. You have to recompile\nyour simulation though.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">auto set_param = [](Param* param) {\n  // Create an artificial bound for the simulation space\n  param-&gt;bound_space_ = true;\n  param-&gt;min_bound_ = 0;\n  param-&gt;max_bound_ = 250;\n  param-&gt;run_mechanical_interactions_ = false;\n};\n\nSimulation simulation(argc, argv, set_param);</code></pre></div>\n<p>You have to create a lambda and pass it to the constructor of <code class=\"language-text\">Simulation</code>.\nAfterwards, <code class=\"language-text\">Simulation</code> only returns a const pointer to the parameters. Thus,\nthey cannot be modified.</p>","fields":{"slug":"/docs/userguide/parameter/"},"timeToRead":3,"excerpt":"Parameters are used to tailor BioDynaMo to your specific simulation.The majority of parameters are defined in the core engine.\nEach moduleâ€¦","fileAbsolutePath":"/website/content/biodynamo/doc/user_guide/parameter.md"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/userguide/parameter/"}}}
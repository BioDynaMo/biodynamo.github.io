{
    "componentChunkName": "component---src-templates-markdown-post-js",
    "path": "/docs/userguide/soma_clustering/",
    "result": {"data":{"site":{"siteMetadata":{"siteUrl":"http://local:8000","title":"BioDynaMo Website","description":"Everything you need to know about agent-based simulations."}},"markdownRemark":{"frontmatter":{"title":"Soma Clustering","date":"2020-08-01","date_pretty":"01 August, 2020","path":"/docs/userguide/soma_clustering/","meta_title":"BioDynaMo User Guide","meta_description":"This is the soma clustering page.","image":"","next":{"url":"/docs/userguide/soma_clustering/","title":"Soma Clustering","description":"This is the soma clustering page."},"sidebar":"userguide","toc":true},"html":"<p>Let's take a look at a more realistic example called soma clustering. In this\nexample, we create two types of cells. Each type of cell secretes a specific substance,\nand moves along the gradient of its corresponding substance. This will form clusters\nof cells that are of the same type.</p>\n<h2 id=\"copy-out-the-demo-code\" style=\"position:relative;\"><a href=\"#copy-out-the-demo-code\" aria-label=\"copy out the demo code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Copy out the demo code</h2>\n<p>Soma clustering is one of many installed demos. It can be copied to a target directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">biodynamo demo soma_clustering <span class=\"token builtin class-name\">.</span></code></pre></div>\n<h2 id=\"inspect-the-code\" style=\"position:relative;\"><a href=\"#inspect-the-code\" aria-label=\"inspect the code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inspect the code</h2>\n<p>Firstly, change to the new <code class=\"language-text\">soma_clustering</code> directory that you have just copied.\nWe can note the following things from its content:</p>\n<h3 id=\"1-creating-a-custom-agent\" style=\"position:relative;\"><a href=\"#1-creating-a-custom-agent\" aria-label=\"1 creating a custom agent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Creating a custom agent</h3>\n<p>Begin by opening <code class=\"language-text\">src/my_cell.h</code> in your favourite text editor. We can find the following code:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyCell</span> <span class=\"token operator\">:</span> <span class=\"token base-clause\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Cell</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">BDM_AGENT_HEADER</span><span class=\"token punctuation\">(</span>MyCell<span class=\"token punctuation\">,</span> Cell<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n  <span class=\"token function\">MyCell</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token function\">MyCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Double3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">Base</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">SetCellType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> t<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> cell_type_ <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">int</span> <span class=\"token function\">GetCellType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> cell_type_<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n <span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n  <span class=\"token keyword\">int</span> cell_type_<span class=\"token punctuation\">;</span></code></pre></div>\n<p>We create a new type of cell called \"MyCell\" that extends the default Cell.\nIt contains a new data member called <code class=\"language-text\">cell_type_</code> that makes it possible to assign\nan integer value of type to a cell.</p>\n<h3 id=\"2-define-substances-and-behaviors\" style=\"position:relative;\"><a href=\"#2-define-substances-and-behaviors\" aria-label=\"2 define substances and behaviors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Define substances and behaviors</h3>\n<p>In <code class=\"language-text\">src/soma_clustering.h</code> we can find the set-up for the soma clustering simulation.\nWe begin by listing of the two substances that are used in this simulation:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">enum</span> <span class=\"token class-name\">Substances</span> <span class=\"token punctuation\">{</span> kSubstance_0<span class=\"token punctuation\">,</span> kSubstance_1 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The properties of these substances are later defined, with their substance<em>name,\ndiffusion</em>coefficient, decay_constant, resolution.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token class-name\">ModelInitializer</span><span class=\"token operator\">::</span><span class=\"token function\">DefineSubstance</span><span class=\"token punctuation\">(</span>kSubstance0<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Substance_0\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">ModelInitializer</span><span class=\"token operator\">::</span><span class=\"token function\">DefineSubstance</span><span class=\"token punctuation\">(</span>kSubstance1<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Substance_1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We can also find the behaviors that were used in the Diffusion exercise.\nThese are added when constructing the agents in the simulation:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">cell<span class=\"token operator\">-></span><span class=\"token function\">AddBehavior</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">Secretion</span><span class=\"token punctuation\">(</span>substance_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncell<span class=\"token operator\">-></span><span class=\"token function\">AddBehavior</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">Chemotaxis</span><span class=\"token punctuation\">(</span>substance_name<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The initial number of cells is set via the <code class=\"language-text\">int num_cells</code> variable (set to 20,000).\nThe environment (simulation space) settings are also set to create a cube of 250x250x250.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">auto</span> set_param <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>Param<span class=\"token operator\">*</span> param<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create an artificial bound for the simulation space</span>\n  param<span class=\"token operator\">-></span>bound_space <span class=\"token operator\">=</span> Param<span class=\"token operator\">::</span>BoundSpaceMode<span class=\"token operator\">::</span>kClosed<span class=\"token punctuation\">;</span>\n  param<span class=\"token operator\">-></span>min_bound <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  param<span class=\"token operator\">-></span>max_bound <span class=\"token operator\">=</span> <span class=\"token number\">250</span><span class=\"token punctuation\">;</span>\n  param<span class=\"token operator\">-></span>unschedule_default_operations <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"mechanical forces\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"configure-the-simulation\" style=\"position:relative;\"><a href=\"#configure-the-simulation\" aria-label=\"configure the simulation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure the simulation</h2>\n<p>Create a <code class=\"language-text\">bdm.toml</code> file in the <code class=\"language-text\">soma_clustering</code> directory, and create the following\nconfiguration file:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[visualization]\nexport = true\ninterval = 10\n\n\t[[visualize_agent]]\n\tname = &quot;MyCell&quot;\n\tadditional_data_members = [ &quot;diameter_&quot;, &quot;cell_type_&quot; ]\n\n\t[[visualize_diffusion]]\n\tname = &quot;Substance_0&quot;\n\n  [[visualize_diffusion]]\n  name = &quot;Substance_1&quot;</code></pre></div>\n<p>This will enable exporting visualization files, so that we can visualize the\nsimulation after it has finished. Furthermore, we enable the output of the diameter\nand the cell type of our agents (named \"MyCell\"), and the two substances\nthat are secreted (\"Substance<em>0\" and \"Substance</em>1\").\nWe may also add the diffusion gradient by adding the setting <code class=\"language-text\">gradient = true</code>.</p>\n<h2 id=\"build-and-run-the-simulation\" style=\"position:relative;\"><a href=\"#build-and-run-the-simulation\" aria-label=\"build and run the simulation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Build and run the simulation</h2>\n<p>Run the following commands to build and run the simulation (do not forget to\n<code class=\"language-text\">source</code> BioDynaMo if you haven't already in your terminal, i.e. <code class=\"language-text\">source &lt;installation-directory&gt;/bin/thisbdm.sh</code>):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">biodynamo build\nbiodynamo run</code></pre></div>\n<h2 id=\"visualize-the-simulation\" style=\"position:relative;\"><a href=\"#visualize-the-simulation\" aria-label=\"visualize the simulation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Visualize the simulation</h2>\n<p>To visualize the simulation, consult the Visualization tutorial (<a href=\"https://biodynamo.org/docs/userguide/visualization/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://biodynamo.org/docs/userguide/visualization/</a>).\nOpen ParaView (<code class=\"language-text\">paraview &amp;</code>) and go to File -> Load State. Locate the soma<em>clustering directory and select the `soma</em>clustering.pvsm` file within output directory.\nIn the next window keep the default ('Use File Names From State').</p>\n<p>Now that simulation can be visualized by hitting the Play button on the top of the interface.\nThis will play the simulation over time.</p>\n<p>By clicking on <code class=\"language-text\">MyCells</code> in the Pipeline Browser, the Properties window will be shown.\nUnder 'Coloring', click the drop-down to change 'Solid Color' to 'cell<em>type</em>' to view cells of each type using a different colour.</p>\n<p>To ensure best results, in the Properties window for \"MyCells\", search \"Glyph\" and set the following properties:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Glyph Type \t\t<span class=\"token operator\">=</span> <span class=\"token string\">'Sphere'</span>\nScalars \t\t  <span class=\"token operator\">=</span> <span class=\"token string\">'Diameters'</span>\nScale Mode \t\t<span class=\"token operator\">=</span> <span class=\"token string\">'Scalar'</span>\nScale Factor \t<span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nGlyph Mode \t\t<span class=\"token operator\">=</span> <span class=\"token string\">'All Points'</span></code></pre></div>\n<p>Don't forget to press \"Apply\" in the Properties window after making changes and pressing \"Zoom to Fit\" if required.\nA visualization of soma clustering using BioDynaMo can also be found here: <a href=\"https://youtu.be/jlOk_Y3SUHo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://youtu.be/jlOk_Y3SUHo</a></p>","fields":{"slug":"/docs/userguide/soma_clustering/"},"timeToRead":4,"excerpt":"Let's take a look at a more realistic example called soma clustering. In this\nexample, we create two types of cells. Each type of cell…","fileAbsolutePath":"/website/content/biodynamo/doc/user_guide/soma_clustering.md"}},"pageContext":{"slug":"/docs/userguide/soma_clustering/"}},
    "staticQueryHashes": []}
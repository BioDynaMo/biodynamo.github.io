{"version":3,"sources":["webpack:///./src/components/gallery/GalleryBox.js","webpack:///./src/pages/gallery.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMetaGhost.js","webpack:///./src/components/common/meta/ArticleMetaMD.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/getMetaImageUrls.js","webpack:///./src/components/common/meta/index.js"],"names":["GalleryBox","src","to","href","headingClass","title","children","className","radius","Spirit","h2","p","propTypes","PropTypes","node","isRequired","string","GalleryPage","data","location","imageUrl","getMetaImageUrls","type","description","image","mainClass","bodyClass","page","xl","h4","shape","site","siteMetadata","siteUrl","pathname","pageQuery","getAuthorProperties","primaryAuthor","fetchAuthorData","authorProfiles","push","website","twitter","_","trimStart","facebook","compact","name","sameAsArray","length","join","profile_image","defaultProps","bool","ImageMeta","content","property","ArticleMetaGhost","canonical","overwriteDefaultImage","ghostPost","author","primary_author","publicTags","map","tagsHelper","visibility","fn","tag","primaryTag","slug","seoImage","feature_image","meta_title","meta_description","excerpt","rel","og_title","og_description","published_at","updated_at","keyword","i","key","twitter_title","twitter_description","object","tags","arrayOf","ArticleMetaMD","post","markdownRemark","fm","frontmatter","publishedAtISODate","date","Date","toISOString","keywords","timeToRead","number","WebsiteMeta","oneOf","MetaData","url","resolve","SITEURL","process","imageUrls","faq","integrations","tutorials","default","section","proptypes"],"mappings":"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","file":"component---src-pages-gallery-js-105ccdc6419a1520925e.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Box} from '../common'\nimport { Spirit } from '../../styles/spirit-styles'\n\nconst GalleryBox = ({ src, to, href, headingClass, title, children }) => (\n    <Box\n        to={to}\n        href={href}\n        className=\"col-12 col-6-ns col-4-l pa8 tdn middarkgrey gallery-box-min-height gallery-box-max-height\"\n        radius=\"4\"\n    >\n        <h2 className={`${Spirit.h2} darkgrey ${headingClass}`}>{title}</h2>\n        <img src={src} className=\"gallery-img mt2\"/>\n        <div className={`${Spirit.p} mt2 midgrey`}>{children}</div>\n    </Box>\n)\n\nGalleryBox.propTypes = {\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n    to: PropTypes.string,\n    href: PropTypes.string,\n}\n\nexport default GalleryBox\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport { PostHeader} from '../components/common'\n\nimport { Icon, Box } from '../components/common'\nimport { Layout } from '../components/common/layout'\nimport { Spirit } from '../styles/spirit-styles'\nimport { MetaData, getMetaImageUrls } from '../components/common/meta'\nimport { GalleryBox } from '../components/gallery'\n\nconst GalleryPage = ({data, location}) => {\n\n\tconst title = `Gallery`\n\tconst description = `This is the gallery and demo page.`\n\tconst imageUrl = getMetaImageUrls()\n\n\treturn(\n\t\t<>\n\t\t\t<MetaData\n\t\t\t\tdata={data}\n\t\t\t\tlocation={location}\n\t\t\t\ttitle={title}\n\t\t\t\ttype=\"website\"\n\t\t\t\tdescription={description}\n\t\t\t\timage={imageUrl}\n\t\t\t/>\n\t\t\t<Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n\n                <div className=\"bg-concepts\">\n                    <div className={`${Spirit.page.xl} pt12 pb4 pt-vw1-ns pb-vw1-ns white pl10 pl0-ns`}>\n                        <h1 className={`${Spirit.h4} gh-integration-header-shadow`}>\n                            <Link to=\"/about/\" className=\"link dim white\">{title}</Link>\n                        </h1>\n                    </div>\n                </div>\n\n                <div className={`${Spirit.page.xl} mt-vw3`}>\n\n                    <section className=\"grid-12 gutter-row-20 gutter-20-ns gutter-36-l\">\n\n                        <GalleryBox href=\"/docs/userguide/\" title=\"Demo 1\" src=\"/images/paraview7-4.png\">\n                            <p className={`${Spirit.p} mw70`}>\n                                Description here!\n                            </p>\n                        </GalleryBox>\n\n                        <GalleryBox to=\"/docs/userguide/\" title=\"Demo 2\" src=\"/images/paraview7-4.png\">\n                            <p className={`${Spirit.p} mw70`}>\n                                Description here!\n                            </p>\n                        </GalleryBox>\n\n                        <GalleryBox to=\"/docs/userguide/\" title=\"Demo 3\" src=\"/images/paraview7-4.png\">\n                            <p className={`${Spirit.p} mw70`}>\n                                Description here!\n                            </p>\n                        </GalleryBox>\n\n                        <GalleryBox to=\"/docs/userguide/\" title=\"Demo 4\" src=\"/images/paraview7-4.png\">\n                            <p className={`${Spirit.p} mw70`}>\n                                Description here!\n                            </p>\n                        </GalleryBox>\n\n                        <GalleryBox to=\"/docs/userguide/\" title=\"Demo 5\" src=\"/images/paraview7-4.png\">\n                            <p className={`${Spirit.p} mw70`}>\n                                Description here!\n                            </p>\n                        </GalleryBox>\n\n                        <GalleryBox to=\"/docs/userguide/\" title=\"Demo 6\" src=\"/images/paraview7-4.png\">\n                            <p className={`${Spirit.p} mw70`}>\n                                Description here!\n                            </p>\n                        </GalleryBox>\n\n                        <GalleryBox to=\"/docs/userguide/\" title=\"Demo 7\" src=\"/images/paraview7-4.png\">\n                            <p className={`${Spirit.p} mw70`}>\n                                Description here!\n                            </p>\n                        </GalleryBox>\n\n                        <GalleryBox to=\"/docs/userguide/\" title=\"Demo 8\" src=\"/images/paraview7-4.png\">\n                            <p className={`${Spirit.p} mw70`}>\n                                Description here!\n                            </p>\n                        </GalleryBox>\n\n                        <GalleryBox to=\"/docs/userguide/\" title=\"Demo 8\" src=\"/images/paraview7-4.png\">\n                            <p className={`${Spirit.p} mw70`}>\n                                Description here!\n                            </p>\n                        </GalleryBox>\n\n                    </section>\n\n                </div>\n\n\t\t\t</Layout>\n\t\t</>\n\t)\n}\n\nGalleryPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n}\n\nexport default GalleryPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            ...SiteMetaFields\n        }\n    }\n`\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor, fetchAuthorData) => {\n    let authorProfiles = []\n\n    if (fetchAuthorData) {\n        authorProfiles.push(\n            primaryAuthor.website ? primaryAuthor.website : null,\n            primaryAuthor.twitter ? `https://twitter.com/${_.trimStart(primaryAuthor.twitter, `@`)}/` : null,\n            primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook}/` : null\n        )\n    } else {\n        authorProfiles.push(\n            `https://ghost.org/`,\n            `https://twitter.com/ghost/`,\n            `https://www.facebook.com/ghost/`\n        )\n    }\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: fetchAuthorData ? primaryAuthor.name : `Ghost`,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: fetchAuthorData ? primaryAuthor.profile_image : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    fetchAuthorData: PropTypes.bool.isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nconst ImageMeta = ({ image }) => (\n    <Helmet>\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:image\" content={image} />\n        <meta property=\"og:image\" content={image} />\n        {/* These are the image sizes of the SEO feature images */}\n        <meta property=\"og:image:width\" content=\"1000\" />\n        <meta property=\"og:image:height\" content=\"523\" />\n    </Helmet >\n)\n\nImageMeta.propTypes = {\n    image: PropTypes.string,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\n\nconst ArticleMetaGhost = ({ data, canonical, fetchAuthorData, title, overwriteDefaultImage, image }) => {\n    const { ghostPost } = data\n    const { siteMetadata } = data.site\n\n    const author = getAuthorProperties(ghostPost.primary_author, fetchAuthorData)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || { name: `General`, slug: `general` }\n    const seoImage = (overwriteDefaultImage && ghostPost.feature_image) ? ghostPost.feature_image : image\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.meta_title || title || ghostPost.title}</title>\n                <meta name=\"description\" content={ghostPost.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta property=\"og:type\" content=\"article\" />\n                <meta property=\"og:title\"\n                    content={\n                        ghostPost.og_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta property=\"og:description\"\n                    content={\n                        ghostPost.og_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                {/* <meta name=\"twitter.label1\" content=\"Reading time\" /> */}\n                {/* <meta name=\"twitter:data1\" content=\"TODO: Reading time helper and replace existing `label1` data\" /> */}\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                <meta name=\"twitter:label2\" content=\"Filed under\" />\n                <meta name=\"twitter:data2\" content={primaryTag} />\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.meta_title || title || ghostPost.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.published_at}\",\n                        \"dateModified\": \"${ghostPost.updated_at}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${ghostPost.meta_description || ghostPost.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nArticleMetaGhost.defaultProps = {\n    fetchAuthorData: false,\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            published_at: PropTypes.string.isRequired,\n            updated_at: PropTypes.string.isRequired,\n            excerpt: PropTypes.string.isRequired,\n            meta_title: PropTypes.string,\n            meta_description: PropTypes.string,\n            primary_author: PropTypes.object.isRequired,\n            feature_image: PropTypes.string,\n            tags: PropTypes.arrayOf(\n                PropTypes.shape({\n                    name: PropTypes.string,\n                    slug: PropTypes.string,\n                    visibility: PropTypes.string,\n                })\n            ),\n            primaryTag: PropTypes.shape({\n                name: PropTypes.string,\n            }),\n            og_title: PropTypes.string,\n            og_description: PropTypes.string,\n            twitter_title: PropTypes.string,\n            twitter_description: PropTypes.string,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    fetchAuthorData: PropTypes.bool,\n    title: PropTypes.string,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport ImageMeta from './ImageMeta'\nimport { getMetaImageUrls } from '.'\n\nconst ArticleMetaMD = ({ data, canonical }) => {\n    const post = data.markdownRemark\n    const fm = post.frontmatter\n    const { siteMetadata } = data.site\n\n    // Convert the frontmatter date into ISO String but, and use a fixed\n    // date, if no date is set. The published date should not change once set.\n    const publishedAtISODate = fm.date ? new Date(fm.date).toISOString() : new Date(`2018-10-15`).toISOString()\n    const primaryTag = fm.keywords && fm.keywords.length ? fm.keywords[0] : null\n    const seoImage = getMetaImageUrls()\n\n    return (\n        <>\n            <Helmet>\n                <title>{fm.meta_title || fm.title}</title>\n                <meta name=\"description\" content={fm.meta_description || post.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={siteMetadata.title} />\n                <meta property=\"og:type\" content=\"article\" />\n                <meta property=\"og:title\" content={fm.meta_title || fm.title} />\n                <meta property=\"og:description\" content={fm.meta_description || post.excerpt} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={publishedAtISODate} />\n                {fm.keywords && fm.keywords.length ? fm.keywords.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />)) : null}\n                <meta property=\"article:author\" content=\"https://www.facebook.com/ghost/\" />\n\n                <meta name=\"twitter:title\" content={fm.meta_title || fm.title} />\n                <meta name=\"twitter:description\" content={fm.meta_description || post.excerpt} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter.label1\" content=\"Reading time\" />\n                <meta name=\"twitter:data1\" content={`${post.timeToRead} min read`} />\n                {primaryTag ? <meta name=\"twitter:label2\" content=\"Filed under\" /> : null}\n                {primaryTag ? <meta name=\"twitter:data2\" content={primaryTag} /> : null}\n                <meta name=\"twitter:site\" content=\"@tryghost\" />\n                <meta name=\"twitter:creator\" content=\"@tryghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"Ghost\",\n                            \"sameAs\": [\n                                \"https://ghost.org/\",\n                                \"https://www.facebook.com/ghost/\",\n                                \"https://twitter.com/tryghost/\"\n                            ]\n                        },\n                        ${fm.keywords && fm.keywords.length ? `\"keywords\": \"${_.join(fm.keywords, `, `)}\",` : ``}\n                        \"headline\": \"${fm.meta_title || fm.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${publishedAtISODate}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"${seoImage}\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"description\": \"${fm.meta_description || post.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${siteMetadata.siteUrl}\"\n                        }\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={seoImage} />\n        </>\n    )\n}\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//     \"name\": \"Ghost\",\n//     \"logo\": {\n//         \"@type\": \"ImageObject\",\n//         \"url\": \"https://ghost.org/favicon.png\",\n//         \"width\": 60,\n//         \"height\": 60\n//     }\n// },\n\nArticleMetaMD.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n                keywords: PropTypes.arrayOf(\n                    PropTypes.string,\n                ),\n                meta_title: PropTypes.string,\n                meta_description: PropTypes.string,\n                date: PropTypes.string,\n            }).isRequired,\n            excerpt: PropTypes.string.isRequired,\n            timeToRead: PropTypes.number,\n        }).isRequired,\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\nexport default ArticleMetaMD\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\n\nimport ImageMeta from './ImageMeta'\n\nconst WebsiteMeta = ({ data, canonical, title, description, image, type }) => (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={data.site.siteMetadata.title} />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:site\" content=\"@ghost\" />\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": ${type && type === `series` ? `\"Series\"` : `\"WebSite\"`},\n                        \"url\": \"${canonical}\",\n                        \"image\": {\n                            \"@type\": \"ImageObject\",\n                            \"url\": \"/images/bdm_logo.png\",\n                            \"width\": 1000,\n                            \"height\": 563\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${data.site.siteMetadata.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={image} />\n        </>\n)\n\n// \"publisher\": {\n//     \"@type\": \"Organization\",\n//         \"name\": \"Ghost\",\n//             \"logo\": {\n//         \"@type\": \"ImageObject\",\n//             \"url\": \"https://ghost.org/favicon.png\",\n//                 \"width\": 60,\n//                     \"height\": 60\n//     }\n// },\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n    }).isRequired,\n    canonical: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    type: PropTypes.oneOf([`website`, `series`]).isRequired,\n}\n\nexport default WebsiteMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport url from 'url'\n\nimport ArticleMetaGhost from './ArticleMetaGhost'\nimport ArticleMetaMD from './ArticleMetaMD'\nimport WebsiteMeta from './WebsiteMeta'\n\nconst MetaData = ({\n    data,\n    type,\n    title,\n    description,\n    image,\n    fetchAuthorData,\n    overwriteDefaultImage,\n    location,\n}) => {\n    const { ghostPost, markdownRemark } = data || {}\n    const { siteMetadata } = data.site\n\n    const canonical = url.resolve(siteMetadata.siteUrl, location.pathname, `/`)\n\n    if (type === `article`) {\n        if (ghostPost) {\n            return (\n                <ArticleMetaGhost\n                    data={data}\n                    canonical={canonical}\n                    fetchAuthorData={fetchAuthorData}\n                    title={title}\n                    image={image}\n                    overwriteDefaultImage={overwriteDefaultImage}\n                />\n            )\n        } else if (markdownRemark) {\n            return (\n                <ArticleMetaMD\n                    data={data}\n                    canonical={canonical}\n                />\n            )\n        }\n    } else if (type === `website` || type === `series`) {\n        return (\n            <WebsiteMeta\n                data={data}\n                canonical={canonical}\n                title={title}\n                description={description}\n                image=\"/images/bdm_logo.png\"\n                type={type}\n            />\n        )\n    }\n\n    return null\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                siteUrl: PropTypes.string.isRequired,\n                title: PropTypes.string.isRequired,\n                description: PropTypes.string.isRequired,\n            }).isRequired,\n        }).isRequired,\n        ghostPost: PropTypes.object,\n        markdownRemark: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    type: PropTypes.oneOf([`website`, `series`, `article`]).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    fetchAuthorData: PropTypes.bool,\n    overwriteDefaultImage: PropTypes.bool,\n}\n\nexport default MetaData\n","import PropTypes from 'prop-types'\nimport url from 'url'\n\n// TODO: this should be available as global var without the need to query\n// the siteMetadata.\nconst SITEURL = process.env.SITE_URL || `https://docs.ghost.org`\n\nconst imageUrls = {\n    faq: url.resolve(SITEURL, `/images/meta/Ghost-FAQ.jpg`),\n    integrations: url.resolve(SITEURL, `/images/meta/Ghost-Integrations.jpg`),\n    tutorials: url.resolve(SITEURL, `/images/meta/Ghost-Tutorials.jpg`),\n    default: url.resolve(SITEURL, `/images/meta/Ghost-Docs.jpg`),\n}\n\nexport const getMetaImageUrls = (section) => {\n    // Set the default image if no section is passed\n    section = section || `default`\n\n    return imageUrls[section]\n}\n\ngetMetaImageUrls.proptypes = {\n    section: PropTypes.string.isRequired,\n}\n\nexport default getMetaImageUrls\n\n","export { default as MetaData } from './MetaData'\nexport { default as getMetaImageUrls } from './getMetaImageUrls'\n"],"sourceRoot":""}
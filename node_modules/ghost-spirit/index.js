'use strict';

const registerHelpers = function registerHelpers(group/*, options */) {
    // options = options || {};
    // let hbs = options.handlebars || options.hbs || global.handlebars || require('handlebars');

    // TODO: register the handlebars helpers with the passed-in hbs
    require('./resources/helpers/shared');
    require(`./resources/helpers/spirit-${group}`);
};

// export the plugins in a fashion that can allow the options to be overridden
// if necessary before passing to `gulpPostcss` or other postcss processors
const postcssPluginConfig = function postcssPluginConfig() {
    return {
        plugins: [
            'postcss-easy-import',
            'postcss-custom-properties',
            'postcss-color-mod-function',
            'postcss-custom-media',
            'autoprefixer',
            'cssnano'
        ],
        options: {
            'postcss-easy-import': {
                path: [
                    'node_modules/ghost-spirit/resources/assets/css'
                ]
            },
            'postcss-custom-properties': {
                preserve: false
            },
            autoprefixer: {browsers: ['last 2 versions']},
            cssnano: {
                zindex: false,
                // cssnano sometimes minifies animations incorrectly causing them to break
                // See: https://github.com/ben-eb/gulp-cssnano/issues/33#issuecomment-210518957
                reduceIdents: {
                    keyframes: false
                },
                discardUnused: {
                    keyframes: false
                }
            }
        }
    };
};

const gulpPostcss = function gulpPostcss(pluginConfig) {
    let postcss = require('gulp-postcss');
    pluginConfig = pluginConfig || postcssPluginConfig();

    let plugins = pluginConfig.plugins.map(plugin => require(plugin)(pluginConfig.options[plugin]));

    return postcss(plugins);
};

module.exports = {
    registerHelpers,
    postcssPluginConfig,
    gulpPostcss,
    styles: {
        product: require('./resources/helpers/spirit-product/styles'),
        brand: require('./resources/helpers/spirit-brand/styles')
    }
};

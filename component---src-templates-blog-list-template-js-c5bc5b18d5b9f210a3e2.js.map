{"version":3,"file":"component---src-templates-blog-list-template-js-c5bc5b18d5b9f210a3e2.js","mappings":"qNAMqBA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA4ElB,OA5EkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UAEnBC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAChD,EAAkCJ,KAAKC,MAAMI,YAArCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SACfC,EAA0B,IAAhBF,EACVG,EAASH,IAAgBC,EACzBG,EAAWJ,EAAc,GAAM,EAAI,+BAAiC,+BAAiCA,EAAc,IAAIK,WACvHC,GAAY,+BAAiCN,EAAc,IAAIK,WAErE,OACE,gBAAC,IAAD,CAAQE,UAAU,yBAAyBC,UAAU,YAEnD,uBAAKC,UAAU,eACX,uBAAKA,UAAcC,EAAAA,EAAAA,KAAAA,EAAL,mDACV,sBAAID,UAAcC,EAAAA,EAAAA,GAAL,iCACT,gBAAC,EAAAC,KAAD,CAAMC,GAAG,8BAA8BH,UAAU,kBAAjD,YAKZ,uBAAKA,UAAcC,EAAAA,EAAAA,KAAAA,EAAL,WACXjB,EAAMoB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KACpD,OACE,wBAAMC,IAAML,EAAKM,IACf,gBAAC,KAAD,CAAKC,OAAO,IAAIZ,UAAU,YACxB,gBAAC,EAAAE,KAAD,CAAMC,GAAIE,EAAKG,OAAOC,KAAMT,UAAU,8CAClC,sBAAIA,UAAcC,EAAAA,EAAAA,GAAL,aAA4BK,EAAzC,MACA,sBAAIN,UAAcC,EAAAA,EAAAA,GAAL,KAAoBI,EAAKE,YAAYM,KAAlD,KACA,qBAAGb,UAAcC,EAAAA,EAAAA,MAAL,QAA0BI,EAAKS,UAE/C,4BAEF,+BAKN,uBAAKd,UAAU,QACf,2BAASA,UAAU,aAEjB,4BACIP,GACA,gBAAC,KAAD,CAAKmB,OAAO,IAAIZ,UAAU,sBACxB,gBAAC,EAAAE,KAAD,CAAMF,UAAU,kCAAkCG,GAAIR,EAAUoB,IAAI,QAClE,sBAAIf,UAAcC,EAAAA,EAAAA,GAAL,aAAb,sBAMR,gBAAC,KAAD,CAAKW,OAAO,IAAIZ,UAAU,wBACvBgB,MAAMC,KAAK,CAAEC,OAAQ1B,IAAY,SAAC2B,EAAGC,GAAJ,OAChC,gBAAC,EAAAlB,KAAD,CAAMF,UAAU,kCAAkCU,IAAG,qBAAsBU,EAAI,GAAKjB,GAAE,+BAAsC,IAANiB,EAAU,GAAKA,EAAI,IACvI,sBAAIpB,UAAcC,EAAAA,EAAAA,GAAL,aAA6BmB,EAAI,EAAKA,EAAE,GAAI5B,EAAW,GAAK,UAK/E,4BACIE,GACA,gBAAC,KAAD,CAAKkB,OAAO,IAAIZ,UAAU,uBACxB,gBAAC,EAAAE,KAAD,CAAMF,UAAU,kCAAkCG,GAAIN,EAAUkB,IAAI,QAClE,sBAAIf,UAAcC,EAAAA,EAAAA,GAAL,aAAb,sBAYjB,EA5EkBnB,CAAsBuC,EAAAA","sources":["webpack://docs/./src/templates/blog-list-template.js"],"sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { Layout } from \"../components/common/layout\"\nimport { Spirit } from '../styles/spirit-styles'\nimport { Box } from \"../components/common\"\n\nexport default class NewsIndexPage extends React.Component {\n\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? \"https://blog.biodynamo.org/\" : (\"https://blog.biodynamo.org/\" + (currentPage - 1)).toString()\n    const nextPage = (\"https://blog.biodynamo.org/\" + (currentPage + 1)).toString()\n\n    return (\n      <Layout mainClass=\"bg-whitegrey-l2 pb-vw3\" bodyClass=\"bg-white\">\n\n        <div className=\"bg-concepts\">\n            <div className={`${Spirit.page.l} pt12 pb4 pt-vw1-ns pb-vw1-ns white pl10 pl0-ns`}>\n                <h1 className={`${Spirit.h4} gh-integration-header-shadow`}>\n                    <Link to=\"https://blog.biodynamo.org/\" className=\"link dim white\">Blogs</Link>\n                </h1>\n            </div>\n        </div>\n\n        <div className={`${Spirit.page.l} mt-vw3`}>\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <span key ={node.id}>\n                <Box radius=\"4\" className=\"news-box\">\n                  <Link to={node.fields.slug} className=\"midgrey home-faq-question link dib pt1 pb5\">\n                      <h3 className={`${Spirit.h4} blue dib`}>{title} &raquo;</h3>\n                      <h5 className={`${Spirit.h5} `}>{node.frontmatter.date} </h5>\n                      <p className={`${Spirit.small} mt0`}>{node.excerpt}</p>\n                  </Link>\n                  <br/>\n                </Box>\n                <br/>\n              </span>\n              )\n          })}\n\n          <div className=\"mt5\"/>\n          <section className=\"news-grid\">\n\n            <div>\n              {!isFirst && (\n                <Box radius=\"4\" className=\"news-grid-box-left\">\n                  <Link className=\"blue home-faq-question link dib\" to={prevPage} rel=\"prev\">\n                    <h4 className={`${Spirit.h5} blue dib`}>&laquo; Previous Page</h4>\n                  </Link>\n                </Box>\n                )}\n            </div>\n\n            <Box radius=\"4\" className=\"news-grid-box-center\">\n              {Array.from({ length: numPages }, (_, i) => (\n                <Link className=\"blue home-faq-question link dib\" key={`pagination-number${i + 1}`} to={`https://blog.biodynamo.org/${i === 0 ? \"\" : i + 1}`}>\n                  <h4 className={`${Spirit.h5} blue dib`}>{(i + 1)}{(i+1)==numPages ? \"\" : \"-\"}</h4>\n                </Link>\n              ))}\n            </Box>\n\n            <div>\n              {!isLast && (\n                <Box radius=\"4\" className=\"news-grid-box-right\">\n                  <Link className=\"blue home-faq-question link dib\" to={nextPage} rel=\"next\">\n                    <h4 className={`${Spirit.h5} blue dib`}>Next Page &raquo;</h4>\n                  </Link>\n                </Box>\n              )}\n            </div>\n\n          </section>\n\n        </div>\n\n      </Layout>\n    )\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      filter: {fields: {slug: {regex: \"https://blog.biodynamo.org/\"}}}\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 100)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD-MM-YYYY\")\n            path\n            meta_description\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["NewsIndexPage","render","posts","this","props","data","allMarkdownRemark","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","mainClass","bodyClass","className","Spirit","Link","to","map","node","title","frontmatter","fields","slug","key","id","radius","date","excerpt","rel","Array","from","length","_","i","React"],"sourceRoot":""}